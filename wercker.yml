# This references the default golang container from
# the Docker Hub: https://registry.hub.docker.com/u/library/golang/
# If you want Google's container you would reference google/golang
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: golang
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - wercker/setup-go-workspace:
        package-dir: github.com/klauern/trackello

    # Gets the dependencies
    - script:
        name: setup dep
        code: |
            make setup
            go get -u github.com/golang/dep/cmd/dep
            dep ensure

    # Build the project
    - script:
        name: go build
        code: |
            make build

    # Test the project
    - script:
        name: go test
        code: |
          go test -v -race $(make list)


# create a coverage report of the tests using 'go cover'
coverage-report:
  steps:
    - wercker/setup-go-workspace:
        package-dir: github.com/klauern/trackello

    - script:
        name: download dep
        code: |
            go get -u github.com/golang/dep/cmd/dep

    - script:
        name: install dependencies
        code: |
            dep ensure

    - script:
        name: add gocoverage
        code: |
            go get -u github.com/philwinder/gocoverage

    # Build the project
    - script:
        name: go build
        code: |
            go build . ./cmd/... ./rest

    - script:
        name: run coverage report
        code: |
          gocoverage -output coverage.txt

    - script:
        name: upload results to codecov.io
        code: |
          bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

release:
  steps:
    - script:
        name: install/update Gox
        code: |
          go get -u github.com/mitchellh/gox
    - script:
        name: build releases
        code: |
          mkdir -p builds
          cd builds
          gox -arch="amd64 arm ppc64 ppc64le" -output=builds github.com/klauern/trackello/cmd/trackello

dev:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # Sets the go workspace and places you package
    # at the right place in the workspace tree
    - wercker/setup-go-workspace:
        package-dir: github.com/klauern/trackello

    # Gets the dependencies
    - script:
        name: setup dep
        code: |
            go get -u github.com/golang/dep/cmd/dep
            dep ensure
            make setup

    # Build the project
    - script:
        name: go build
        code: |
            make build

    # Test the project
    - script:
        name: go test
        code: |
            go test -v -race $(make list)
